---
import BaseLayout from '@/layouts/BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import Giscus from '@/components/Giscus.astro';
import TOC from '@/components/TOC.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.filter((p) => !p.data.draft).map((p) => ({ params: { slug: p.slug.split('/') }, props: { post: p } }));
}

const { post } = Astro.props as { post: CollectionEntry<'posts'> };
const { data } = post;
const { Content, headings } = await post.render();
const ogImage = `/og/${post.slug}.svg`;

const all = (await getCollection('posts', ({ data }) => !data.draft))
  .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime());
const idx = all.findIndex((p) => p.id === post.id);
const newer = idx > 0 ? all[idx - 1] : null; // 时间更近
const older = idx < all.length - 1 ? all[idx + 1] : null; // 时间更远

const words = post.body.replace(/```[\s\S]*?```/g, '').replace(/`[^`]*`/g, '').replace(/[#!>*_\[\]\(\)`~\-]/g, ' ');
const readingMinutes = Math.max(1, Math.ceil(words.trim().split(/\s+/).filter(Boolean).length / 300));
---

<BaseLayout
  title={data.title}
  description={data.description}
  image={data.cover || ogImage}
  isPost={true}
  publishDate={data.publishDate}
  updatedDate={data.updatedDate}
  tags={data.tags}
>
  <article class="prose dark:prose-invert max-w-3xl mx-auto px-4 py-10">
    <nav class="text-xs text-gray-500 mb-4"><a href="/">首页</a> / <a href="/">文章</a> / <span>{data.title}</span></nav>
    <header class="mb-8">
      <h1 class="text-3xl font-bold">{data.title}</h1>
      <p class="mt-2 text-sm text-gray-500">
        发布于 {new Date(data.publishDate).toLocaleDateString()}
        {data.updatedDate && <> · 更新于 {new Date(data.updatedDate).toLocaleDateString()}</>}
        · 约 {readingMinutes} 分钟阅读
      </p>
      {data.tags?.length > 0 && (
        <div class="mt-3 flex flex-wrap gap-2">
          {data.tags.map((t) => (
            <a href={`/tags/${t}/`} class="px-2 py-1 text-xs rounded bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700">#{t}</a>
          ))}
        </div>
      )}
      {headings?.length > 0 && (
        <div class="mt-6">
          <TOC headings={headings} />
        </div>
      )}
    </header>
    <Content />
    {(newer || older) && (
      <nav class="mt-10 pt-6 border-t border-gray-200 dark:border-gray-800 flex justify-between text-sm">
        <div>
          {newer && (
            <a href={`/posts/${newer.slug}/`} class="hover:underline">← 上一篇：{newer.data.title}</a>
          )}
        </div>
        <div>
          {older && (
            <a href={`/posts/${older.slug}/`} class="hover:underline">下一篇：{older.data.title} →</a>
          )}
        </div>
      </nav>
    )}
  </article>
  <section class="max-w-3xl mx-auto px-4">
    <div class="mt-10">
      <h2 class="text-xl font-semibold mb-4">评论</h2>
      <slot name="comments">
        <Giscus />
      </slot>
    </div>
  </section>
</BaseLayout>
